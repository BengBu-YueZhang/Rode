{"version":3,"sources":["store/selectors/message.js","views/Message.js"],"names":["getMessage","createSelector","state","get","message","styles","root","display","width","minHeight","backgroundColor","padding","boxSizing","justifyContent","alignItems","flexDirection","content","title","marginTop","text","fontSize","color","blueGrey","Message","init","token","getLocalStorage","_this","props","dispatch","actions","messageRequest","this","_this$props","classes","console","log","toJS","react_default","a","createElement","className","Typography_default","variant","List_default","size","component","signature","Divider_default","map","mes","Fragment","key","id","ListItem_default","button","type","ListItemText_default","primary","Link","to","pathname","search","concat","author","loginname","topic","React","Component","compose","connect","withStyles"],"mappings":"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","file":"static/js/6.da0a55f5.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nexport const getMessage = createSelector(\n  [state => state.get('message')],\n  message => message\n)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { compose } from 'redux'\nimport actions from '@/store/actions'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport { getLocalStorage } from '@/util/storage'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport Typography from '@material-ui/core/Typography'\nimport { connect } from 'react-redux'\nimport { getMessage } from '@/store/selectors/message'\nimport { Link } from 'react-router-dom'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    width: '100%',\n    minHeight: '100%',\n    backgroundColor: '#fff',\n    padding: '30px 0',\n    boxSizing: 'border-box',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  content: {\n    width: '80%'\n  },\n  title: {\n    marginTop: '10px'\n  },\n  text: {\n    fontSize: '14px',\n    color: blueGrey[600]\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    message: getMessage(state)\n  }\n}\n\nclass Message extends React.Component {\n\n  componentDidMount () {\n    this.init()\n  }\n\n  init = () => {\n    const token = getLocalStorage('token')\n    this.props.dispatch(actions.messageRequest(token))\n  }\n\n  render () {\n    const { classes, message } = this.props\n    console.log(message.toJS())\n    return (\n      <div className={classes.root}>\n        <div className={classes.content}>\n          <Typography variant=\"h6\">\n            新消息\n          </Typography>\n          <List>\n            {\n              message.get('hasnot_read_messages').size === 0 ? (\n                <Typography component=\"p\" className={classes.signature}>\n                  暂无消息\n                </Typography>\n              ) : (\n                null\n              )\n            }\n          </List>\n          <Divider/>\n          <Typography variant=\"h6\" className={classes.title}>\n            过往消息\n          </Typography>\n          <List>\n            {\n              message.get('has_read_messages').size === 0 ? (\n                <Typography component=\"p\" className={classes.signature}>\n                  暂无消息\n                </Typography>\n              ) : (\n                message.get('has_read_messages').map(mes => {\n                  return (\n                    <React.Fragment key={mes.id}>\n                      <ListItem button>\n                        {\n                          mes.type === 'reply' && (\n                            <ListItemText\n                              primary={\n                                <React.Fragment>\n                                  <p className={classes.text}>\n                                    { \n                                      <Link to={{\n                                        pathname: '/user',\n                                        search: `?name=${mes.author.loginname}`\n                                      }}>{ mes.author.loginname }</Link>\n                                    } 回复了您的话题  :\n                                  </p>\n                                  <p className={classes.text}>\n                                    <Link\n                                      to={{\n                                        pathname: '/detail',\n                                        search: `?id=${mes.topic.id}`\n                                      }}\n                                      className={classes.text}\n                                    >{ mes.topic.title }</Link>\n                                  </p>\n                                </React.Fragment>\n                              }\n                            />\n                          )\n                        }\n                        {\n                          mes.type === 'at' && (\n                            <ListItemText\n                              primary={\n                                <React.Fragment>\n                                  <p className={classes.text}>\n                                    { \n                                      <Link to={{\n                                        pathname: '/user',\n                                        search: `?name=${mes.author.loginname}`\n                                      }}>{ mes.author.loginname }</Link>\n                                    } 在话题  :\n                                  </p>\n                                  <p className={classes.text}>\n                                    <Link\n                                      to={{\n                                        pathname: '/detail',\n                                        search: `?id=${mes.topic.id}`\n                                      }}\n                                      className={classes.text}\n                                    >{ mes.topic.title }</Link> 中@了您\n                                  </p>\n                                </React.Fragment>\n                              }\n                            />\n                          )\n                        }\n                      </ListItem>\n                      <Divider/>\n                    </React.Fragment>\n                  )\n                })\n              )\n            }\n          </List>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default compose(connect(mapStateToProps), withStyles(styles))(Message)\n"],"sourceRoot":""}